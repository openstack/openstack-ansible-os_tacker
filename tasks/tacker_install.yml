---
# (C)2016 Brocade Communications Systems, Inc.
# 130 Holger Way, San Jose, CA 95134.
# All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- include: tacker_install_apt.yml
  when:
    - ansible_pkg_mgr == 'apt'

- name: Create developer mode constraint file
  copy:
    dest: "/opt/developer-pip-constraints.txt"
    content: |
      {% for item in tacker_developer_constraints %}
      {{ item }}
      {% endfor %}
  when:
    - tacker_developer_mode | bool

- name: Clone requirements git repository
  git:
    repo: "{{ tacker_requirements_git_repo }}"
    dest: "/opt/requirements"
    clone: yes
    update: yes
    version: "{{ tacker_requirements_git_install_branch }}"
  when:
    - tacker_developer_mode | bool

- name: Add constraints to pip_install_options fact for developer mode
  set_fact:
    pip_install_options_fact: "{{ pip_install_options|default('') }} --constraint /opt/developer-pip-constraints.txt --constraint /opt/requirements/upper-constraints.txt"
  when:
    - tacker_developer_mode | bool

- name: Set pip_install_options_fact when not in developer mode
  set_fact:
    pip_install_options_fact: "{{ pip_install_options|default('') }}"
  when:
    - not tacker_developer_mode | bool

- name: Install requires pip packages
  pip:
    name: "{{ tacker_requires_pip_packages | join(' ') }}"
    state: "{{ tacker_pip_package_state }}"
    extra_args: "{{ pip_install_options_fact }}"
  register: install_packages
  until: install_packages|success
  retries: 5
  delay: 2
  tags:
    - skip_ansible_lint

- name: Get local venv checksum
  stat:
    path: "/var/cache/{{ tacker_venv_download_url | basename }}"
    get_md5: False
  when:
    - not tacker_developer_mode | bool
  register: local_venv_stat

- name: Get remote venv checksum
  uri:
    url: "{{ tacker_venv_download_url | replace('tgz', 'checksum') }}"
    return_content: True
  when:
    - not tacker_developer_mode | bool
  register: tacker_venv_checksum

- name: Attempt venv download
  get_url:
    url: "{{ tacker_venv_download_url }}"
    dest: "/var/cache/{{ tacker_venv_download_url | basename }}"
    checksum: "sha1:{{ tacker_venv_checksum.content | trim }}"
  ignore_errors: true
  register: tacker_get_venv
  when:
    - not tacker_developer_mode | bool

- name: Remove existing venv
  file:
    path: "{{ tacker_bin | dirname }}"
    state: absent
  when:
    - tacker_get_venv | changed

- name: Create tacker venv dir
  file:
    path: "{{ tacker_bin | dirname }}"
    state: directory
  register: tacker_venv_dir

- name: Unarchive pre-built venv
  unarchive:
    src: "/var/cache/{{ tacker_venv_download_url | basename }}"
    dest: "{{ tacker_bin | dirname }}"
    copy: "no"
  when:
    - not tacker_developer_mode | bool
    - tacker_get_venv | changed or tacker_venv_dir | changed
  notify:
    - Restart tacker services

- name: Install pip packages
  pip:
    name: "{{ tacker_pip_packages | join(' ') }}"
    state: "{{ tacker_pip_package_state }}"
    virtualenv: "{{ tacker_bin | dirname }}"
    virtualenv_site_packages: "no"
    extra_args: "{{ pip_install_options_fact }}"
  register: install_packages
  until: install_packages|success
  retries: 5
  delay: 2
  when:
    - tacker_get_venv | failed or tacker_developer_mode | bool
  notify:
    - Restart tacker services
  tags:
    - skip_ansible_lint

- name: Update virtualenv path
  shell: |
    find {{ tacker_bin }} -name \*.pyc -delete
    sed -si '1s/^.*python.*$/#!{{ tacker_bin | replace ('/','\/') }}\/python/' {{ tacker_bin }}/*
  tags:
    - skip_ansible_lint
  when:
    - not tacker_developer_mode | bool
    - tacker_get_venv | success
