---
# (C)2016 Brocade Communications Systems, Inc.
# 130 Holger Way, San Jose, CA 95134.
# All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
## Verbosity Options
debug: false

# python venv executable
tacker_venv_python_executable: "{{ openstack_venv_python_executable | default('python3') }}"

# Enable/Disable Ceilometer
tacker_ceilometer_enabled: "{{ (groups['ceilometer_all'] is defined) and (groups['ceilometer_all'] | length > 0) }}"

# Set the host which will execute the shade modules
# for the service setup. The host must already have
# clouds.yaml properly configured.
tacker_service_setup_host: "{{ openstack_service_setup_host | default('localhost') }}"
tacker_service_setup_host_python_interpreter: >-
  {{
    openstack_service_setup_host_python_interpreter | default(
      (tacker_service_setup_host == 'localhost') | ternary(ansible_playbook_python, ansible_facts['python']['executable']))
  }}

# Set the package install state for distribution packages
# Options are 'present' and 'latest'
tacker_package_state: "{{ package_state | default('latest') }}"

tacker_git_repo: https://opendev.org/openstack/tacker
tacker_git_install_branch: master
tacker_upper_constraints_url: >-
  {{ requirements_git_url | default('https://releases.openstack.org/constraints/upper/' ~ requirements_git_install_branch | default('master')) }}
tacker_git_constraints:
  - "--constraint {{ tacker_upper_constraints_url }}"

tacker_pip_install_args: "{{ pip_install_options | default('') }}"

# Name of the virtual env to deploy into
tacker_venv_tag: "{{ venv_tag | default('untagged') }}"
tacker_bin: "/openstack/venvs/tacker-{{ tacker_venv_tag }}/bin"

# Set the etc dir path where tacker is installed.
#  This is used for role access to the db migrations.
#  Example:
#  tacker_etc_dir: "/usr/local/etc/tacker"
tacker_etc_dir: "/etc/tacker"

## System info
tacker_system_user_name: tacker
tacker_system_group_name: tacker
tacker_system_shell: /bin/false
tacker_system_comment: tacker system user
tacker_system_user_home: "/var/lib/{{ tacker_system_user_name }}"

## Configuration for Oslo Messaging

# RPC
tacker_oslomsg_rpc_host_group: "{{ oslomsg_rpc_host_group | default('rabbitmq_all') }}"
tacker_oslomsg_rpc_setup_host: "{{ (tacker_oslomsg_rpc_host_group in groups) | ternary(groups[tacker_oslomsg_rpc_host_group][0], 'localhost') }}"
tacker_oslomsg_rpc_transport: "{{ oslomsg_rpc_transport | default('rabbit') }}"
tacker_oslomsg_rpc_servers: "{{ oslomsg_rpc_servers | default('127.0.0.1') }}"
tacker_oslomsg_rpc_port: "{{ oslomsg_rpc_port | default('5672') }}"
tacker_oslomsg_rpc_use_ssl: "{{ oslomsg_rpc_use_ssl | default(False) }}"
tacker_oslomsg_rpc_userid: tacker
tacker_oslomsg_rpc_policies: []
# vhost name depends on value of oslomsg_rabbit_quorum_queues. In case quorum queues
# are not used - vhost name will be prefixed with leading `/`.
tacker_oslomsg_rpc_vhost:
  - name: /tacker
    state: "{{ tacker_oslomsg_rabbit_quorum_queues | ternary('absent', 'present') }}"
  - name: tacker
    state: "{{ tacker_oslomsg_rabbit_quorum_queues | ternary('present', 'absent') }}"
tacker_oslomsg_rpc_ssl_version: "{{ oslomsg_rpc_ssl_version | default('TLSv1_2') }}"
tacker_oslomsg_rpc_ssl_ca_file: "{{ oslomsg_rpc_ssl_ca_file | default('') }}"

# Notify
tacker_oslomsg_notify_configure: "{{ oslomsg_notify_configure | default(tacker_ceilometer_enabled) }}"
tacker_oslomsg_notify_host_group: "{{ oslomsg_notify_host_group | default('rabbitmq_all') }}"
tacker_oslomsg_notify_setup_host: "{{ (tacker_oslomsg_notify_host_group in groups) | ternary(groups[tacker_oslomsg_notify_host_group][0], 'localhost') }}"
tacker_oslomsg_notify_transport: "{{ oslomsg_notify_transport | default('rabbit') }}"
tacker_oslomsg_notify_servers: "{{ oslomsg_notify_servers | default('127.0.0.1') }}"
tacker_oslomsg_notify_port: "{{ oslomsg_notify_port | default('5672') }}"
tacker_oslomsg_notify_use_ssl: "{{ oslomsg_notify_use_ssl | default(False) }}"
tacker_oslomsg_notify_userid: "{{ tacker_oslomsg_rpc_userid }}"
tacker_oslomsg_notify_password: "{{ tacker_oslomsg_rpc_password }}"
tacker_oslomsg_notify_vhost: "{{ tacker_oslomsg_rpc_vhost }}"
tacker_oslomsg_notify_ssl_version: "{{ oslomsg_notify_ssl_version | default('TLSv1_2') }}"
tacker_oslomsg_notify_ssl_ca_file: "{{ oslomsg_notify_ssl_ca_file | default('') }}"
tacker_oslomsg_notify_policies: []

## RabbitMQ integration
tacker_oslomsg_rabbit_quorum_queues: "{{ oslomsg_rabbit_quorum_queues | default(True) }}"
tacker_oslomsg_rabbit_stream_fanout: "{{ oslomsg_rabbit_stream_fanout | default(tacker_oslomsg_rabbit_quorum_queues) }}"
tacker_oslomsg_rabbit_transient_quorum_queues: "{{ oslomsg_rabbit_transient_quorum_queues | default(tacker_oslomsg_rabbit_stream_fanout) }}"
tacker_oslomsg_rabbit_qos_prefetch_count: "{{ oslomsg_rabbit_qos_prefetch_count | default(tacker_oslomsg_rabbit_stream_fanout | ternary(10, 0)) }}"
tacker_oslomsg_rabbit_queue_manager: "{{ oslomsg_rabbit_queue_manager | default(tacker_oslomsg_rabbit_quorum_queues) }}"
tacker_oslomsg_rabbit_quorum_delivery_limit: "{{ oslomsg_rabbit_quorum_delivery_limit | default(0) }}"
tacker_oslomsg_rabbit_quorum_max_memory_bytes: "{{ oslomsg_rabbit_quorum_max_memory_bytes | default(0) }}"

## Database info
tacker_db_setup_host: "{{ openstack_db_setup_host | default('localhost') }}"
tacker_db_setup_python_interpreter: >-
  {{
    openstack_db_setup_python_interpreter | default(
      (tacker_db_setup_host == 'localhost') | ternary(ansible_playbook_python, ansible_facts['python']['executable']))
  }}
tacker_galera_address: "{{ galera_address | default('127.0.0.1') }}"
tacker_galera_database: tacker
tacker_galera_user: tacker
tacker_galera_use_ssl: "{{ galera_use_ssl | default(False) }}"
tacker_galera_ssl_ca_cert: "{{ galera_ssl_ca_cert | default('') }}"
tacker_galera_port: "{{ galera_port | default('3306') }}"
tacker_db_max_overflow: "{{ openstack_db_max_overflow | default('50') }}"
tacker_db_max_pool_size: "{{ openstack_db_max_pool_size | default('5') }}"
tacker_db_pool_timeout: "{{ openstack_db_pool_timeout | default('30') }}"
tacker_db_connection_recycle_time: "{{ openstack_db_connection_recycle_time | default('600') }}"

tacker_bind_address: "{{ openstack_service_bind_address | default('0.0.0.0') }}"
tacker_service_port: 9890
tacker_program_name: tacker-server
tacker_conductor_program_name: tacker-conductor

## Service Type and Data
tacker_service_region: "{{ service_region | default('RegionOne') }}"
tacker_service_name: tacker-server
tacker_service_proto: http
tacker_service_type: nfv-orchestration
tacker_service_description: "tacker service"
tacker_service_publicuri: "{{ tacker_service_publicuri_proto }}://{{ external_lb_vip_address }}:{{ tacker_service_port }}"
tacker_service_publicurl: "{{ tacker_service_publicuri }}"
tacker_service_internaluri: "{{ tacker_service_internaluri_proto }}://{{ internal_lb_vip_address }}:{{ tacker_service_port }}"
tacker_service_internalurl: "{{ tacker_service_internaluri }}"
tacker_service_adminuri: "{{ tacker_service_adminuri_proto }}://{{ internal_lb_vip_address }}:{{ tacker_service_port }}"
tacker_service_adminurl: "{{ tacker_service_adminuri }}"
tacker_service_registry_proto: "{{ tacker_service_proto }}"
tacker_service_publicuri_proto: "{{ openstack_service_publicuri_proto | default(tacker_service_proto) }}"
tacker_service_adminuri_proto: "{{ openstack_service_adminuri_proto | default(tacker_service_proto) }}"
tacker_service_internaluri_proto: "{{ openstack_service_internaluri_proto | default(tacker_service_proto) }}"

tacker_services:
  tacker-server:
    group: tacker_server
    service_name: "{{ tacker_service_name }}"
    enabled: true
    state: started
    execstarts: "{{ tacker_bin }}/{{ tacker_program_name }} {{ tacker_config_options | default('') }}"
    config_overrides: "{{ tacker_init_config_overrides }}"
  tacker-conductor:
    group: tacker_server
    service_name: "{{ tacker_conductor_program_name }}"
    enabled: true
    state: started
    execstarts: "{{ tacker_bin }}/{{ tacker_conductor_program_name }} {{ tacker_conductor_config_options | default('') }}"
    config_overrides: "{{ tacker_conductor_init_config_overrides }}"

## Barbican service
barbican_keys_backend: false

# NOTE: move password to tests/test-vars.yml
tacker_service_password: password

## Keystone
tacker_service_project_domain_id: default
tacker_service_project_name: service
tacker_service_user_domain_id: default
tacker_service_user_name: tacker
tacker_keystone_auth_plugin: password
tacker_service_role_names:
  - admin
  - service
tacker_service_token_roles:
  - service
tacker_service_token_roles_required: "{{ openstack_service_token_roles_required | default(True) }}"

tacker_service_in_ldap: "{{ service_ldap_backend_enabled | default(False) }}"

## Common pip packages
tacker_pip_packages:
  - networking-sfc
  - osprofiler
  - PyMySQL
  - python-heatclient
  - python-tackerclient
  - systemd-python
  - "git+{{ tacker_git_repo }}@{{ tacker_git_install_branch }}#egg=tacker"

tacker_config_options: --config-file {{ tacker_etc_dir }}/tacker.conf
tacker_conductor_config_options: "{{ tacker_config_options }}"
tacker_init_config_overrides: {}
tacker_conductor_init_config_overrides: {}

## tacker config
tacker_heat_stack_retires: 60
tacker_heat_stack_retry_wait: 5

# heat service paramter for tacker.conf
heat_service_adminurl: "{{ tacker_service_publicuri_proto }}://{{ external_lb_vip_address }}:8004/v1"

## Tunable overrides
tacker_tacker_conf_overrides: {}
tacker_api_paste_ini_overrides: {}
tacker_policy_overrides: {}
tacker_rootwrap_overrides: {}

###
### Backend TLS
###

# Define if communication between haproxy and service backends should be
# encrypted with TLS.
tacker_backend_ssl: "{{ openstack_service_backend_ssl | default(False) }}"

# Storage location for SSL certificate authority
tacker_pki_dir: "{{ openstack_pki_dir | default('/etc/openstack_deploy/pki') }}"

# Delegated host for operating the certificate authority
tacker_pki_setup_host: "{{ openstack_pki_setup_host | default('localhost') }}"

# tacker server certificate
tacker_pki_keys_path: "{{ tacker_pki_dir ~ '/certs/private/' }}"
tacker_pki_certs_path: "{{ tacker_pki_dir ~ '/certs/certs/' }}"
tacker_pki_intermediate_cert_name: "{{ openstack_pki_service_intermediate_cert_name | default('ExampleCorpIntermediate') }}"
tacker_pki_regen_cert: ""
tacker_pki_san: "{{ openstack_pki_san | default('DNS:' ~ ansible_facts['hostname'] ~ ',IP:' ~ management_address) }}"
tacker_pki_certificates:
  - name: "tacker_{{ ansible_facts['hostname'] }}"
    provider: ownca
    cn: "{{ ansible_facts['hostname'] }}"
    san: "{{ tacker_pki_san }}"
    signed_by: "{{ tacker_pki_intermediate_cert_name }}"

# tacker destination files for SSL certificates
tacker_ssl_cert: /etc/tacker/tacker.pem
tacker_ssl_key: /etc/tacker/tacker.key

# Installation details for SSL certificates
tacker_pki_install_certificates:
  - src: "{{ tacker_user_ssl_cert | default(tacker_pki_certs_path ~ 'tacker_' ~ ansible_facts['hostname'] ~ '-chain.crt') }}"
    dest: "{{ tacker_ssl_cert }}"
    owner: "{{ tacker_system_user_name }}"
    group: "{{ tacker_system_user_name }}"
    mode: "0644"
  - src: "{{ tacker_user_ssl_key | default(tacker_pki_keys_path ~ 'tacker_' ~ ansible_facts['hostname'] ~ '.key.pem') }}"
    dest: "{{ tacker_ssl_key }}"
    owner: "{{ tacker_system_user_name }}"
    group: "{{ tacker_system_user_name }}"
    mode: "0600"

# Define user-provided SSL certificates
# tacker_user_ssl_cert: <path to cert on ansible deployment host>
# tacker_user_ssl_key: <path to cert on ansible deployment host>
